name: Generate AI Digest

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 9 * * *'  # Daily at 9 AM UTC

permissions:
  contents: write  # Need write permission to push screenshots
  issues: write

jobs:
  generate-digest:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Claude Code SDK and Playwright
        run: |
          npm install -g @anthropic-ai/claude-code
          npx playwright install chromium
          npx playwright install-deps chromium

      - name: Generate AI Digest with Visualization
        env:
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          WITH_VISUALIZATION: "true"
          MCP_CONFIG: "playwright-mcp-config.json"
        run: |
          # Make the script executable and run it
          chmod +x agent.sh
          ./agent.sh

      - name: Read Generated Digest
        id: digest
        run: |
          if [ -f result.md ]; then
            DIGEST_CONTENT=$(cat result.md)
            echo "digest_exists=true" >> $GITHUB_OUTPUT
          else
            DIGEST_CONTENT="Failed to generate digest"
            echo "digest_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit Screenshot to Repository
        if: steps.digest.outputs.digest_exists == 'true' && hashFiles('ai-digest-visualization.png') != ''
        id: screenshot
        run: |
          DATE=$(date +%Y-%m-%d)
          TIMESTAMP=$(date +%H-%M-%S)
          FILENAME="screenshots/${DATE}-${TIMESTAMP}.png"
          
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Create or checkout the ai-digest-screenshots branch
          git fetch origin ai-digest-screenshots:ai-digest-screenshots 2>/dev/null || git checkout -b ai-digest-screenshots
          git checkout ai-digest-screenshots || git checkout -b ai-digest-screenshots
          
          # Create screenshots directory if it doesn't exist
          mkdir -p screenshots
          
          # Copy the screenshot with date-based name
          cp ai-digest-visualization.png "$FILENAME"
          
          # Commit and push
          git add "$FILENAME"
          git commit -m "Add AI digest visualization for ${DATE} at ${TIMESTAMP}"
          git push origin ai-digest-screenshots || git push --set-upstream origin ai-digest-screenshots
          
          # Save the filename for the issue
          echo "screenshot_url=https://raw.githubusercontent.com/${{ github.repository }}/ai-digest-screenshots/${FILENAME}" >> $GITHUB_OUTPUT
          echo "screenshot_path=${FILENAME}" >> $GITHUB_OUTPUT
      
      - name: Upload Visualization as Artifact (backup)
        if: steps.digest.outputs.digest_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ai-digest-visualization
          path: ai-digest-visualization.png
          retention-days: 30
      
      - name: Add to Workflow Summary
        run: |
          echo "## ðŸ¤– Today's AI Digest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat result.md >> $GITHUB_STEP_SUMMARY || echo "No digest generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f ai-digest-visualization.png ]; then
            echo "### ðŸ“Š AI Digest Visualization" >> $GITHUB_STEP_SUMMARY
            echo "Screenshot saved as artifact (view in Actions tab)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Create GitHub Issue with Digest
        if: steps.digest.outputs.digest_exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const digestContent = fs.readFileSync('result.md', 'utf8');
            const date = new Date().toISOString().split('T')[0];
            const time = new Date().toTimeString().split(' ')[0];
            const title = `ðŸ¤– AI Digest - ${date} at ${time}`;
            
            let visualizationSection = '';
            const screenshotUrl = '${{ steps.screenshot.outputs.screenshot_url }}';
            if (screenshotUrl && fs.existsSync('ai-digest-visualization.png')) {
              visualizationSection = `
            
            ![AI Digest Visualization](${screenshotUrl})`;
            }
            
            const body = `${digestContent}${visualizationSection}
            
            ---
            [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            // Always create a new issue
            const newIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['ai-digest']
            });
            console.log(`Created new issue #${newIssue.data.number}`);